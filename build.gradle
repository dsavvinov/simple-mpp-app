buildscript {
    repositories {
        maven { url 'https://plugins.gradle.org/m2/' }
        mavenLocal()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
    }
}

apply plugin: 'kotlin-multiplatform'
apply plugin: 'kotlinx-serialization'

kotlin {
    targets {
        js('frontend') {
            browser()
        }
        jvm('backend') {
            compilations.main {
                tasks.getByName(processResourcesTaskName) {
                    dependsOn(frontendBrowserWebpack)
                    from(new File(frontendBrowserWebpack.archiveFile.name, frontendBrowserWebpack.outputPath))
                }
            }
        }
    }
}

repositories {
    jcenter()
    maven { url "https://dl.bintray.com/kotlin/ktor" }
    maven { url "https://dl.bintray.com/kotlin/kotlinx" }
}

dependencies {
    backendMainImplementation "io.ktor:ktor-server-netty:$ktor_version"
    backendMainImplementation "io.ktor:ktor-html-builder:$ktor_version"
    backendMainImplementation "ch.qos.logback:logback-classic:$logback_version"

    commonMainImplementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:$serialization_version"
    commonMainImplementation "org.jetbrains.kotlin:kotlin-stdlib-common"
    commonTestImplementation "org.jetbrains.kotlin:kotlin-test-annotations-common"
    commonTestImplementation "org.jetbrains.kotlin:kotlin-test-common"

    frontendMainImplementation "org.jetbrains.kotlin:kotlin-stdlib-js"
    frontendMainImplementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime-js:$serialization_version"
    frontendTestImplementation "org.jetbrains.kotlin:kotlin-test-js"

    backendMainImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    backendMainImplementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"
    backendTestImplementation "org.jetbrains.kotlin:kotlin-test"
    backendTestImplementation "org.jetbrains.kotlin:kotlin-test-junit"
}

task run(type: JavaExec, dependsOn: [backendJar]) {
    dependsOn(frontendProcessResources)
    main = "io.ktor.samples.fullstack.backend.BackendCodeKt"
    classpath(configurations.backendRuntimeClasspath, backendJar)
    args = []
}
